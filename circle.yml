version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:jdk
    working_directory: ~/sheeeng/omed-buck
    steps:
      - checkout
      - run:
          name: Update & Upgrade
          command: |
            set -x
            sudo apt-get update
            sudo apt-get upgrade
      - run:
          name: Check Version
          command: |
            set -x
            java -version
      - run:
          name: Setup Make Prerequisites
          command: |
            set -x
            echo "Setup Make Prerequisites ..."
            sudo apt-get install --yes build-essential
            gcc --version
      - run:
          name: Setup CircleCI Prerequisites
          # The git openssh tar gzip ca-certificates tools required for CircleCI.
          # The alpine-sdk is similar to build-essential, need to be verified whether it is needed.
          # https://circleci.com/docs/2.0/custom-images/#adding-required-and-custom-tools-or-files
          command: |
            set -x
            echo "Setup CircleCI Prerequisites ..."
            sudo apt-get install --yes pkg-config zip g++ zlib1g-dev unzip python
            gcc --version
      - run:
          name: Setup Buck
          command: |
            set -x
            echo "Setup Buck ..."
            sudo apt-get install --yes default-jdk ant python git
            git clone https://github.com/facebook/buck.git ${HOME}/buck
            cd ~/buck
            time ant
            # echo "That said, as a sanity check, Buck is capable of building itself. Once you build Buck using Ant, you can re-build Buck using Buck by running ./bin/buck build buck."
            # echo "https://buckbuild.com/concept/faq.html"
            # time bin/buck build buck --verbose 1 --no-cache
            cd -
            sudo ln -s ${HOME}/buck/bin/buck /usr/bin/buck
            sudo ln -s ${HOME}/buck/bin/buckd /usr/bin/buckd
            buck --version
      - run:
          name: Setup Google Test for Buck
          command: |
            set -x
            echo "Setup Google Test for Buck ..."
            git clone git@github.com:google/googletest.git googtest
            cp bak/BAK googtest/BUCK
            buck build //googtest:gtest
      - run:
          name: List Build Targets with Buck
          command: |
            set -x
            buck targets
      - run:
          name: Build with Buck
          command: |
            set -x
            buck build :mainy --verbose 1 --no-cache
      - run:
          name: Run after Buck
          command: |
            set -x
            buck run :mainy x y z
      - store_artifacts:
          path: buck-out/
      - store_artifacts:
          path: buck-out/
          destination: buckout
  test:
    docker:
      - image: circleci/openjdk:jdk
    working_directory: ~/sheeeng/elpmaxe-mathy
    steps:
      - checkout
      - run:
          name: Update & Upgrade
          command: |
            set -x
            sudo apt-get update
            sudo apt-get upgrade
      - run:
          name: Check Version
          command: |
            set -x
            java -version
      - run:
          name: Setup CircleCI Prerequisites
          # The git openssh tar gzip ca-certificates tools required for CircleCI.
          # The alpine-sdk is similar to build-essential, need to be verified whether it is needed.
          # https://circleci.com/docs/2.0/custom-images/#adding-required-and-custom-tools-or-files
          command: |
            set -x
            echo "Setup CircleCI Prerequisites ..."
            sudo apt-get install --yes pkg-config zip g++ zlib1g-dev unzip python
            gcc --version
      - run:
          name: Setup Buck
          command: |
            set -x
            echo "Setup Buck ..."
            sudo apt-get install --yes default-jdk ant python git
            git clone https://github.com/facebook/buck.git ${HOME}/buck
            cd ~/buck
            time ant
            # echo "That said, as a sanity check, Buck is capable of building itself. Once you build Buck using Ant, you can re-build Buck using Buck by running ./bin/buck build buck."
            # echo "https://buckbuild.com/concept/faq.html"
            # time bin/buck build buck --verbose 1 --no-cache
            cd -
            sudo ln -s ${HOME}/buck/bin/buck /usr/bin/buck
            sudo ln -s ${HOME}/buck/bin/buckd /usr/bin/buckd
            buck --version
      - run:
          name: Setup Google Test for Buck
          command: |
            set -x
            echo "Setup Google Test for Buck ..."
            git clone git@github.com:google/googletest.git googtest
            cp bak/BAK googtest/BUCK
            buck build //googtest:gtest
      - run:
          name: Artifact
          shell: /bin/sh
          command: | # shorthanded command can also have multiple lines
            echo "<p>Hi, <img width=16 src='img/world.svg'></p>" | sudo tee $CIRCLE_ARTIFACTS/hello.html
            sudo mkdir $CIRCLE_ARTIFACTS/img
            sudo curl "http://wikimedia.org/wikipedia/commons/e/e2/Ambox_globe.svg" -o $CIRCLE_ARTIFACTS/img/world.svg
      - run:
          name: List Build Targets with Buck
          command: |
            set -x
            buck targets
      - run:
          name: Test using Buck with Google Test
          command: |
            set -x
            buck test //:greety_test --verbose 1 --num-threads 1 --no-cache
      - store_artifacts:
          path: buck-out/
      - store_artifacts:
          path: buck-out/
          destination: buckout
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
