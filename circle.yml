version: 2
jobs:
  build:
    docker:
      - image: praqma/native-buck:latest
    working_directory: /workspace
    steps:
      - checkout
      - run:
          name: Interpolating Environment Variables to Set Other Environment Variables
          # If you need to interpolate other environment variables to set an environment variable, the only place to do this at the moment is in bash.
          # CircleCI 2.0 automatically sets a $BASH_ENV variable to a random name in /tmp, and will source this file for each step.
          # https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables
          command: |
            echo 'export DEBIAN_FRONTEND=noninteractive' >> $BASH_ENV
            echo 'export WORKSPACE_DIR=/workspace' >> $BASH_ENV
            # echo 'export THIRDPARTY_DIR=${PWD}/3rdparty' >> $BASH_ENV
            # echo 'export GOOGLETEST_DIR=${THIRDPARTY_DIR}/googletest-master' >> $BASH_ENV
      - run:
          name: Version
          command: |
            set -x
            cat /etc/*release
      - run:
          name: Update Submodule(s)
          command: |
            git submodule update --init
            # cp -v ${THIRDPARTY_DIR}/googletest_BUCK ${GOOGLETEST_DIR}/BUCK
      - run:
          name: Build
          command: |
            set -x
            cd ${WORKSPACE_DIR}
            bash ${PWD}/build.sh
      # - store_artifacts:
      #     path: 
      #     destination: 
  test:
    docker:
      - image: praqma/native-buck:latest
    working_directory: /workspace
    steps:
      - checkout
      - run:
          name: Interpolating Environment Variables to Set Other Environment Variables
          # If you need to interpolate other environment variables to set an environment variable, the only place to do this at the moment is in bash.
          # CircleCI 2.0 automatically sets a $BASH_ENV variable to a random name in /tmp, and will source this file for each step.
          # https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables
          command: |
            echo 'export DEBIAN_FRONTEND=noninteractive' >> $BASH_ENV
            echo 'export WORKSPACE_DIR=/workspace' >> $BASH_ENV
            # echo 'export THIRDPARTY_DIR=${PWD}/3rdparty' >> $BASH_ENV
            # echo 'export GOOGLETEST_DIR=${THIRDPARTY_DIR}/googletest-master' >> $BASH_ENV
      - run:
          name: Check Version
          command: |
            set -x
            cat /etc/*release
      - run:
          name: Update Submodule(s)
          command: |
            git submodule update --init
            # cp -v ${THIRDPARTY_DIR}/googletest_BUCK ${GOOGLETEST_DIR}/BUCK
      - run:
          name: Test
          command: |
            set -x
            cd ${WORKSPACE_DIR}
            bash ${PWD}/test.sh
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
